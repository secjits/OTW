Welcome back! Let's get to it.
================ SOURCE =======================
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 
int main(int argc, char **argv){
	int i = 1;
	char buffer[64];

	snprintf(buffer, sizeof buffer, argv[1]);
	buffer[sizeof (buffer) - 1] = 0;
	printf("Change i's value from 1 -> 500. ");

	if(i==500){
		printf("GOOD\n");
		system("/bin/sh");
	}

	printf("No way...let me give you a hint!\n");
	printf("buffer : [%s] (%d)\n", buffer, strlen(buffer));
	printf ("i = %d (%p)\n", i, &i);
	return 0;
}

So we need to rewrite the variable i to be 500

================ QUICK FUZZ ======================
narnia5@narnia:~$ /narnia/narnia5 $(python -c'print "A"*64+"500"')
Change i's value from 1 -> 500. No way...let me give you a hint!
buffer : [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA] (63)
i = 1 (0xffffd6ec)
narnia5@narnia:~$ /narnia/narnia5 $(python -c'print "A"*640+"500"')
Change i's value from 1 -> 500. No way...let me give you a hint!
buffer : [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA] (63)
i = 1 (0xffffd4ac)
narnia5@narnia:~$ /narnia/narnia5 $(python -c'print "A"*60+"500"')
Change i's value from 1 -> 500. No way...let me give you a hint!
buffer : [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA500] (63)
i = 1 (0xffffd6ec)
narnia5@narnia:~$ /narnia/narnia5 $(python -c'print "A"*60+"501"')
Change i's value from 1 -> 500. No way...let me give you a hint!
buffer : [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA501] (63)
i = 1 (0xffffd6ec)
narnia5@narnia:~$ /narnia/narnia5 $(python -c'print "A"*50+"501"')
Change i's value from 1 -> 500. No way...let me give you a hint!
buffer : [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA501] (53)
i = 1 (0xffffd6fc)

No change in i regardless of buffer size, this comes from 	snprintf(buffer, sizeof buffer, argv[1]);
... these devs and their input sanitization....
Let's see what it looks like in gdb

============= DEBUGGIN' #1 =============================
(gdb) break main
Breakpoint 1 at 0x80484c0
(gdb) break *0x080484ee     // this is the address of the return to narnia5 from snprintf()
Breakpoint 2 at 0x80484ee
(gdb) run AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Starting program: /narnia/narnia5 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Breakpoint 1, 0x080484c0 in main ()
(gdb) x/200x $esp
0xffffd6e8:	0x00000000	0xf7e3cad3	0x00000002	0xffffd784
0xffffd6f8:	0xffffd790	0xf7feacca	0x00000002	0xffffd784
0xffffd708:	0xffffd724	0x08049878	0x0804823c	0xf7fcc000
0xffffd718:	0x00000000	0x00000000	0x00000000	0x2a3bc16e
0xffffd728:	0x1203057e	0x00000000	0x00000000	0x00000000
0xffffd738:	0x00000002	0x080483c0	0x00000000	0xf7ff04c0
0xffffd748:	0xf7e3c9e9	0xf7ffd000	0x00000002	0x080483c0
0xffffd758:	0x00000000	0x080483e1	0x080484bd	0x00000002
0xffffd768:	0xffffd784	0x08048580	0x080485f0	0xf7feb160
0xffffd778:	0xffffd77c	0x0000001c	0x00000002	0xffffd8a8
0xffffd788:	0xffffd8b8	0x00000000	0xffffd8f8	0xffffd908
0xffffd798:	0xffffd91c	0xffffd93b	0xffffd94e	0xffffd957
0xffffd7a8:	0xffffd964	0xffffde85	0xffffde90	0xffffde9c
0xffffd7b8:	0xffffdefa	0xffffdf11	0xffffdf20	0xffffdf32
0xffffd7c8:	0xffffdf43	0xffffdf4c	0xffffdf5f	0xffffdf67
0xffffd7d8:	0xffffdf77	0xffffdfa6	0xffffdfc6	0x00000000
0xffffd7e8:	0x00000020	0xf7fdbbe0	0x00000021	0xf7fdb000
0xffffd7f8:	0x00000010	0x178bfbff	0x00000006	0x00001000
0xffffd808:	0x00000011	0x00000064	0x00000003	0x08048034
0xffffd818:	0x00000004	0x00000020	0x00000005	0x00000008
0xffffd828:	0x00000007	0xf7fdc000	0x00000008	0x00000000
0xffffd838:	0x00000009	0x080483c0	0x0000000b	0x000036b5
0xffffd848:	0x0000000c	0x000036b5	0x0000000d	0x000036b5
0xffffd858:	0x0000000e	0x000036b5	0x00000017	0x00000000
0xffffd868:	0x00000019	0xffffd88b	0x0000001f	0xffffdfe8
0xffffd878:	0x0000000f	0xffffd89b	0x00000000	0x00000000
0xffffd888:	0xf1000000	0x10ab659e	0x0b48eacb	0x3007302c
0xffffd898:	0x698c415a	0x00363836	0x00000000	0x00000000
0xffffd8a8:	0x72616e2f	0x2f61696e	0x6e72616e	0x00356169
0xffffd8b8:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8c8:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8d8:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8e8:	0x41414141	0x41414141	0x41414141	0x00414141
0xffffd8f8:	0x4c454853	0x622f3d4c	0x622f6e69	0x00687361
0xffffd908:	0x4d524554	0x6574783d	0x322d6d72	0x6f633635
0xffffd918:	0x00726f6c	0x5f485353	0x45494c43	0x313d544e
0xffffd928:	0x312e3237	0x2e302e38	0x32342031	0x20383334
0xffffd938:	0x53003232	0x545f4853	0x2f3d5954	0x2f766564
0xffffd948:	0x2f737470	0x434c0030	0x4c4c415f	0x5500433d
0xffffd958:	0x3d524553	0x6e72616e	0x00356169	0x435f534c
0xffffd968:	0x524f4c4f	0x73723d53	0x643a303d	0x31303d69
0xffffd978:	0x3a34333b	0x303d6e6c	0x36333b31	0x3d686d3a
0xffffd988:	0x703a3030	0x30343d69	0x3a33333b	0x303d6f73
0xffffd998:	0x35333b31	0x3d6f643a	0x333b3130	0x64623a35
0xffffd9a8:	0x3b30343d	0x303b3333	0x64633a31	0x3b30343d
0xffffd9b8:	0x303b3333	0x726f3a31	0x3b30343d	0x303b3133
0xffffd9c8:	0x75733a31	0x3b37333d	0x733a3134	0x30333d67
0xffffd9d8:	0x3a33343b	0x333d6163	0x31343b30	0x3d77743a
0xffffd9e8:	0x343b3033	0x776f3a32	0x3b34333d	0x733a3234
0xffffd9f8:	0x37333d74	0x3a34343b	0x303d7865	0x32333b31
(gdb) c
Continuing.

Breakpoint 2, 0x080484ee in main ()
(gdb) x/200x $esp
0xffffd680:	0xffffd69c	0x00000040	0xffffd8b8	0xf7eb8fe6
0xffffd690:	0xffffffff	0xffffd6be	0xf7e2fc34	0x41414141
0xffffd6a0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd6b0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd6c0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd6d0:	0x41414141	0x41414141	0x00414141	0x00000001
0xffffd6e0:	0x08048580	0x00000000	0x00000000	0xf7e3cad3
0xffffd6f0:	0x00000002	0xffffd784	0xffffd790	0xf7feacca
0xffffd700:	0x00000002	0xffffd784	0xffffd724	0x08049878
0xffffd710:	0x0804823c	0xf7fcc000	0x00000000	0x00000000
0xffffd720:	0x00000000	0x2a3bc16e	0x1203057e	0x00000000
0xffffd730:	0x00000000	0x00000000	0x00000002	0x080483c0
0xffffd740:	0x00000000	0xf7ff04c0	0xf7e3c9e9	0xf7ffd000
0xffffd750:	0x00000002	0x080483c0	0x00000000	0x080483e1
0xffffd760:	0x080484bd	0x00000002	0xffffd784	0x08048580
0xffffd770:	0x080485f0	0xf7feb160	0xffffd77c	0x0000001c
0xffffd780:	0x00000002	0xffffd8a8	0xffffd8b8	0x00000000
0xffffd790:	0xffffd8f8	0xffffd908	0xffffd91c	0xffffd93b
0xffffd7a0:	0xffffd94e	0xffffd957	0xffffd964	0xffffde85
0xffffd7b0:	0xffffde90	0xffffde9c	0xffffdefa	0xffffdf11
0xffffd7c0:	0xffffdf20	0xffffdf32	0xffffdf43	0xffffdf4c
0xffffd7d0:	0xffffdf5f	0xffffdf67	0xffffdf77	0xffffdfa6
0xffffd7e0:	0xffffdfc6	0x00000000	0x00000020	0xf7fdbbe0
0xffffd7f0:	0x00000021	0xf7fdb000	0x00000010	0x178bfbff
0xffffd800:	0x00000006	0x00001000	0x00000011	0x00000064
0xffffd810:	0x00000003	0x08048034	0x00000004	0x00000020
0xffffd820:	0x00000005	0x00000008	0x00000007	0xf7fdc000
0xffffd830:	0x00000008	0x00000000	0x00000009	0x080483c0
0xffffd840:	0x0000000b	0x000036b5	0x0000000c	0x000036b5
0xffffd850:	0x0000000d	0x000036b5	0x0000000e	0x000036b5
0xffffd860:	0x00000017	0x00000000	0x00000019	0xffffd88b
0xffffd870:	0x0000001f	0xffffdfe8	0x0000000f	0xffffd89b
0xffffd880:	0x00000000	0x00000000	0xf1000000	0x10ab659e
0xffffd890:	0x0b48eacb	0x3007302c	0x698c415a	0x00363836
0xffffd8a0:	0x00000000	0x00000000	0x72616e2f	0x2f61696e
0xffffd8b0:	0x6e72616e	0x00356169	0x41414141	0x41414141
0xffffd8c0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8d0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8e0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8f0:	0x41414141	0x00414141	0x4c454853	0x622f3d4c
0xffffd900:	0x622f6e69	0x00687361	0x4d524554	0x6574783d
0xffffd910:	0x322d6d72	0x6f633635	0x00726f6c	0x5f485353
0xffffd920:	0x45494c43	0x313d544e	0x312e3237	0x2e302e38
0xffffd930:	0x32342031	0x20383334	0x53003232	0x545f4853
0xffffd940:	0x2f3d5954	0x2f766564	0x2f737470	0x434c0030
0xffffd950:	0x4c4c415f	0x5500433d	0x3d524553	0x6e72616e
0xffffd960:	0x00356169	0x435f534c	0x524f4c4f	0x73723d53
0xffffd970:	0x643a303d	0x31303d69	0x3a34333b	0x303d6e6c
0xffffd980:	0x36333b31	0x3d686d3a	0x703a3030	0x30343d69
0xffffd990:	0x3a33333b	0x303d6f73	0x35333b31	0x3d6f643a

It looks like before the call to snprintf() argv[1] is located at 0xffffd8b8
After the copy to buffer it becomes adjascent to i
=================== DEBUGGIN' #2 ===========================
I'm going to test if making argv[1] 4x that size will change its proximity to i and buffer

(gdb) run AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Starting program: /narnia/narnia5 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Breakpoint 1, 0x080484c0 in main ()
(gdb) x/200x $esp
0xffffd628:	0x00000000	0xf7e3cad3	0x00000002	0xffffd6c4
0xffffd638:	0xffffd6d0	0xf7feacca	0x00000002	0xffffd6c4
0xffffd648:	0xffffd664	0x08049878	0x0804823c	0xf7fcc000
0xffffd658:	0x00000000	0x00000000	0x00000000	0x1396ae7a
0xffffd668:	0x2bafea6a	0x00000000	0x00000000	0x00000000
0xffffd678:	0x00000002	0x080483c0	0x00000000	0xf7ff04c0
0xffffd688:	0xf7e3c9e9	0xf7ffd000	0x00000002	0x080483c0
0xffffd698:	0x00000000	0x080483e1	0x080484bd	0x00000002
0xffffd6a8:	0xffffd6c4	0x08048580	0x080485f0	0xf7feb160
0xffffd6b8:	0xffffd6bc	0x0000001c	0x00000002	0xffffd7eb
0xffffd6c8:	0xffffd7fb	0x00000000	0xffffd8f8	0xffffd908
0xffffd6d8:	0xffffd91c	0xffffd93b	0xffffd94e	0xffffd957
0xffffd6e8:	0xffffd964	0xffffde85	0xffffde90	0xffffde9c
0xffffd6f8:	0xffffdefa	0xffffdf11	0xffffdf20	0xffffdf32
0xffffd708:	0xffffdf43	0xffffdf4c	0xffffdf5f	0xffffdf67
0xffffd718:	0xffffdf77	0xffffdfa6	0xffffdfc6	0x00000000
0xffffd728:	0x00000020	0xf7fdbbe0	0x00000021	0xf7fdb000
0xffffd738:	0x00000010	0x178bfbff	0x00000006	0x00001000
0xffffd748:	0x00000011	0x00000064	0x00000003	0x08048034
0xffffd758:	0x00000004	0x00000020	0x00000005	0x00000008
0xffffd768:	0x00000007	0xf7fdc000	0x00000008	0x00000000
0xffffd778:	0x00000009	0x080483c0	0x0000000b	0x000036b5
0xffffd788:	0x0000000c	0x000036b5	0x0000000d	0x000036b5
0xffffd798:	0x0000000e	0x000036b5	0x00000017	0x00000000
0xffffd7a8:	0x00000019	0xffffd7cb	0x0000001f	0xffffdfe8
0xffffd7b8:	0x0000000f	0xffffd7db	0x00000000	0x00000000
0xffffd7c8:	0x23000000	0x67a1aa6a	0xb8c2f61d	0x03057ab8
0xffffd7d8:	0x69ed334b	0x00363836	0x00000000	0x00000000
0xffffd7e8:	0x2f000000	0x6e72616e	0x6e2f6169	0x696e7261
0xffffd7f8:	0x41003561	0x41414141	0x41414141	0x41414141
0xffffd808:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd818:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd828:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd838:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd848:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd858:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd868:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd878:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd888:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd898:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8a8:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8b8:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8c8:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8d8:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8e8:	0x41414141	0x41414141	0x41414141	0x00414141
0xffffd8f8:	0x4c454853	0x622f3d4c	0x622f6e69	0x00687361
0xffffd908:	0x4d524554	0x6574783d	0x322d6d72	0x6f633635
0xffffd918:	0x00726f6c	0x5f485353	0x45494c43	0x313d544e
0xffffd928:	0x312e3237	0x2e302e38	0x32342031	0x20383334
0xffffd938:	0x53003232	0x545f4853	0x2f3d5954	0x2f766564
(gdb) c
Continuing.

Breakpoint 2, 0x080484ee in main ()
(gdb) x/200x $esp
0xffffd5c0:	0xffffd5dc	0x00000040	0xffffd7fb	0xf7eb8fe6
0xffffd5d0:	0xffffffff	0xffffd5fe	0xf7e2fc34	0x41414141
0xffffd5e0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd5f0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd600:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd610:	0x41414141	0x41414141	0x00414141	0x00000001
0xffffd620:	0x08048580	0x00000000	0x00000000	0xf7e3cad3
0xffffd630:	0x00000002	0xffffd6c4	0xffffd6d0	0xf7feacca
0xffffd640:	0x00000002	0xffffd6c4	0xffffd664	0x08049878
0xffffd650:	0x0804823c	0xf7fcc000	0x00000000	0x00000000
0xffffd660:	0x00000000	0x1396ae7a	0x2bafea6a	0x00000000
0xffffd670:	0x00000000	0x00000000	0x00000002	0x080483c0
0xffffd680:	0x00000000	0xf7ff04c0	0xf7e3c9e9	0xf7ffd000
0xffffd690:	0x00000002	0x080483c0	0x00000000	0x080483e1
0xffffd6a0:	0x080484bd	0x00000002	0xffffd6c4	0x08048580
0xffffd6b0:	0x080485f0	0xf7feb160	0xffffd6bc	0x0000001c
0xffffd6c0:	0x00000002	0xffffd7eb	0xffffd7fb	0x00000000
0xffffd6d0:	0xffffd8f8	0xffffd908	0xffffd91c	0xffffd93b
0xffffd6e0:	0xffffd94e	0xffffd957	0xffffd964	0xffffde85
0xffffd6f0:	0xffffde90	0xffffde9c	0xffffdefa	0xffffdf11
0xffffd700:	0xffffdf20	0xffffdf32	0xffffdf43	0xffffdf4c
0xffffd710:	0xffffdf5f	0xffffdf67	0xffffdf77	0xffffdfa6
0xffffd720:	0xffffdfc6	0x00000000	0x00000020	0xf7fdbbe0
0xffffd730:	0x00000021	0xf7fdb000	0x00000010	0x178bfbff
0xffffd740:	0x00000006	0x00001000	0x00000011	0x00000064
0xffffd750:	0x00000003	0x08048034	0x00000004	0x00000020
0xffffd760:	0x00000005	0x00000008	0x00000007	0xf7fdc000
0xffffd770:	0x00000008	0x00000000	0x00000009	0x080483c0
0xffffd780:	0x0000000b	0x000036b5	0x0000000c	0x000036b5
0xffffd790:	0x0000000d	0x000036b5	0x0000000e	0x000036b5
0xffffd7a0:	0x00000017	0x00000000	0x00000019	0xffffd7cb
0xffffd7b0:	0x0000001f	0xffffdfe8	0x0000000f	0xffffd7db
0xffffd7c0:	0x00000000	0x00000000	0x23000000	0x67a1aa6a
0xffffd7d0:	0xb8c2f61d	0x03057ab8	0x69ed334b	0x00363836
0xffffd7e0:	0x00000000	0x00000000	0x2f000000	0x6e72616e
0xffffd7f0:	0x6e2f6169	0x696e7261	0x41003561	0x41414141
0xffffd800:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd810:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd820:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd830:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd840:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd850:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd860:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd870:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd880:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd890:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8a0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8b0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8c0:	0x41414141	0x41414141	0x41414141	0x41414141
0xffffd8d0:	0x41414141	0x41414141	0x41414141	0x41414141

nope....

======================= NEW technique ============================================
We are going to try to exploit snprintf() since the 3rd parameter is argv[1] we can play with format strings
Using the different % parameters we can either read formatted stack mem or write to it if parameters are not specified to print function.
For instance:
printf("%d",i) will print the value of i, the first value on print's stack frame
printf("%d") will print the first value on print's stack frame... might not be i

The format parameters are:
%d Value Decimal <=== reads
%u Value Unsigned decimal <=== reads
%x Value Hexadecimal <=== reads
%s Pointer String <=== writes mem
%n Pointer Number of bytes written so far <=== writes mem

So with that in mind, let's look at what is available to us in the context of narnia5.
This breakpoint shows the stack once all the parameters are pushed onto it inside if snprintf()

(gdb) run "AAAAAAAA%x%x%x%x%x%x%x%x"
Breakpoint 3, 0x080484ee in main ()
(gdb) x/200x $esp
0xffffd6a0:	0xffffd6bc	0x00000040	0xffffd8df	0xf7eb8fe6
0xffffd6b0:	0xffffffff	0xffffd6de	0xf7e2fc34	0x41414141
0xffffd6c0:	0x41414141	0x62653766	0x36656638	0x66666666
0xffffd6d0:	0x66666666	0x66666666	0x65643664	0x32653766
0xffffd6e0:	0x34336366	0x31343134	0x31343134	0x31343134
0xffffd6f0:	0x31343134	0x35363236	0x00363733	0x00000001
0xffffd700:	0x08048580	0x00000000	0x00000000	0xf7e3cad3
0xffffd710:	0x00000002	0xffffd7a4	0xffffd7b0	0xf7feacca
0xffffd720:	0x00000002	0xffffd7a4	0xffffd744	0x08049878
0xffffd730:	0x0804823c	0xf7fcc000	0x00000000	0x00000000
0xffffd740:	0x00000000	0xa3d1462e	0x9bea423e	0x00000000
0xffffd750:	0x00000000	0x00000000	0x00000002	0x080483c0
0xffffd760:	0x00000000	0xf7ff04c0	0xf7e3c9e9	0xf7ffd000
0xffffd770:	0x00000002	0x080483c0	0x00000000	0x080483e1
0xffffd780:	0x080484bd	0x00000002	0xffffd7a4	0x08048580
0xffffd790:	0x080485f0	0xf7feb160	0xffffd79c	0x0000001c
0xffffd7a0:	0x00000002	0xffffd8cf	0xffffd8df	0x00000000
0xffffd7b0:	0xffffd8f8	0xffffd908	0xffffd91c	0xffffd93b
0xffffd7c0:	0xffffd94e	0xffffd957	0xffffd964	0xffffde85
0xffffd7d0:	0xffffde90	0xffffde9c	0xffffdefa	0xffffdf11
0xffffd7e0:	0xffffdf20	0xffffdf32	0xffffdf43	0xffffdf4c
0xffffd7f0:	0xffffdf5f	0xffffdf67	0xffffdf77	0xffffdfa6
0xffffd800:	0xffffdfc6	0x00000000	0x00000020	0xf7fdbbe0
0xffffd810:	0x00000021	0xf7fdb000	0x00000010	0x178bfbff
0xffffd820:	0x00000006	0x00001000	0x00000011	0x00000064
0xffffd830:	0x00000003	0x08048034	0x00000004	0x00000020
0xffffd840:	0x00000005	0x00000008	0x00000007	0xf7fdc000
0xffffd850:	0x00000008	0x00000000	0x00000009	0x080483c0
0xffffd860:	0x0000000b	0x000036b5	0x0000000c	0x000036b5
0xffffd870:	0x0000000d	0x000036b5	0x0000000e	0x000036b5
0xffffd880:	0x00000017	0x00000000	0x00000019	0xffffd8ab
0xffffd890:	0x0000001f	0xffffdfe8	0x0000000f	0xffffd8bb
0xffffd8a0:	0x00000000	0x00000000	0x4d000000	0xb3d8bfe1
0xffffd8b0:	0xa8e8ae3f	0x5773fa30	0x697344f0	0x00363836
0xffffd8c0:	0x00000000	0x00000000	0x00000000	0x2f000000
0xffffd8d0:	0x6e72616e	0x6e2f6169	0x696e7261	0x41003561
0xffffd8e0:	0x41414141	0x25414141	0x25782578	0x25782578
0xffffd8f0:	0x25782578	0x00782578	0x4c454853	0x622f3d4c
0xffffd900:	0x622f6e69	0x00687361	0x4d524554	0x6574783d
0xffffd910:	0x322d6d72	0x6f633635	0x00726f6c	0x5f485353
0xffffd920:	0x45494c43	0x313d544e	0x312e3237	0x2e302e38
0xffffd930:	0x35332031	0x20343331	0x53003232	0x545f4853
0xffffd940:	0x2f3d5954	0x2f766564	0x2f737470	0x434c0030
0xffffd950:	0x4c4c415f	0x5500433d	0x3d524553	0x6e72616e
0xffffd960:	0x00356169	0x435f534c	0x524f4c4f	0x73723d53
0xffffd970:	0x643a303d	0x31303d69	0x3a34333b	0x303d6e6c
0xffffd980:	0x36333b31	0x3d686d3a	0x703a3030	0x30343d69
0xffffd990:	0x3a33333b	0x303d6f73	0x35333b31	0x3d6f643a
0xffffd9a0:	0x333b3130	0x64623a35	0x3b30343d	0x303b3333
0xffffd9b0:	0x64633a31	0x3b30343d	0x303b3333	0x726f3a31
(gdb) c
Continuing.
Change i's value from 1 -> 500. No way...let me give you a hint!
buffer : [AAAAAAAAf7eb8fe6ffffffffffffd6def7e2fc3441414141414141416265376] (63)
i = 1 (0xffffd6fc)
[Inferior 1 (process 1111) exited normally]

As we can seen in the programs output, we have a buffer of As on the left and then some stack mem outputted into the buffer.
Output of the first %x parameter is at location 0xffffd6ac, value is 0xf7eb8fe6.
Another noteworthy point is that, as we can see in the outputted buffer, A's are outputted twice: 
Once as the string being outputted and another as it is on the stack as a bunch of 0x41. 

This means that we can push an address on the stack and then access it. Let's play around with this.
